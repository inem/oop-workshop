#!/usr/bin/ruby
# option parser template: https://gist.github.com/rtomayko/1190547

require "optparse"

require_relative 'lib/converter'
require_relative 'lib/feed'
require_relative 'lib/operations'
require_relative 'lib/atom_generator'
require_relative 'lib/rss_generator'

# convert-feed --out rss feed.xml
# convert-feed --out atom https://ru.hexlet.io/lessons.rss

options = {}

# parse arguments
file = __FILE__
ARGV.options do |opts|
  opts.on("-r", "--reverse")            { options[:reverse] = true }
  opts.on("-s", "--sort")               { options[:sort] = true }
  opts.on("-o", "--out=format", String) { |val| options[:format] = val }
  opts.on("-l", "--limit=val", Integer) { |val| options[:limit] = val }
  opts.on_tail("-h", "--help")          { exec "grep ^#/<'#{file}'|cut -c4-" }
  opts.parse!
end

output = Converter.new(options).convert(ARGV.first)
puts output



# title = nil
# items = nil

# raw_feed = RSS::Parser.parse(feed_content)
# feed = Feed.new_from_channel(raw_feed.channel)
# items = feed.items.each{ |item| Item.from_raw(item) }

# if sort
#   items = Operations.sort(items, ->(a,b){ a.date <=> b.date })
# end

# if limit
#   items = Operations.limit(items, limit)
# end

# if reverse
#   items = Operations.reverse(items)
# end

# generator_klass = format == "atom" ? AtomGenerator : RssGenerator

# generator = generator_klass.new(feed, items)
# rss = generator.generate!
# puts rss